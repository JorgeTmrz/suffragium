{"version":3,"sources":["firebase/firebaseConfig.ts","firebase/components/FirebaseProvider.tsx","helpers/reducers/appReducerInitialState.ts","redux/store.js","helpers/reducers/appReducer.ts","routes/PublicRoute.tsx","routes/PrivateRoute.tsx","pages/auth/helpers/LoginPageStyles.ts","components/Copyright.tsx","pages/auth/components/LoginForm.tsx","firebase/hooks/useFirebaseUsers.ts","pages/auth/LoginPage.tsx","firebase/components/listItems.tsx","pages/admin/helpers/styles/DashboardStyles.ts","components/RightActionButton.tsx","pages/admin/components/roomPage/QuestionsChart.tsx","pages/admin/components/roomPage/RoomQuestion.tsx","firebase/hooks/useFirebaseRooms.ts","pages/admin/Room.tsx","pages/admin/hooks/useRoom.ts","pages/admin/components/roomsPage/CurrentRoomCard.tsx","pages/admin/components/roomsPage/EndedRoomCard.tsx","pages/admin/helpers/styles/RoomsPageStyles.ts","pages/admin/helpers/styles/RoomPageStyles.ts","pages/admin/components/roomsPage/RoomsModalForm.tsx","pages/admin/components/roomsPage/QuestionsList.tsx","pages/admin/helpers/types/rooms.ts","pages/admin/helpers/usersTableColums.ts","pages/admin/components/roomsPage/UsersTable.tsx","pages/admin/components/roomsPage/NewRoomModal.tsx","pages/admin/hooks/useRooms.ts","pages/admin/Rooms.tsx","pages/admin/helpers/styles/SettingsPageStyles.ts","pages/admin/components/settingsPage/Avatar.tsx","pages/admin/components/settingsPage/SettingPageOptions.tsx","pages/admin/Settings.tsx","pages/admin/helpers/userInitialState.ts","pages/admin/helpers/styles/UsersPageStyles.ts","pages/admin/components/usersPage/AddOrEditUserForm.tsx","pages/admin/helpers/usersInitialState.ts","pages/admin/components/usersPage/AddOrEditUserModal.tsx","pages/admin/components/usersPage/UserCard.tsx","pages/admin/Users.tsx","routes/AdminRoutes.tsx","pages/admin/BasePage.tsx","routes/AppRouter.tsx","pages/auth/hooks/useAppTheme.ts","App.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","createContext","firebase","FirebaseProvider","children","apps","length","initializeApp","Provider","value","appReducerInitialState","theme","user","name","uid","store","configureStore","reducer","app","state","action","type","payload","PublicRoute","Component","isAuthenticated","rest","component","props","to","PrivateRoute","LoginPageStyles","makeStyles","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Copyright","Typography","variant","color","align","gutterBottom","Link","Date","getFullYear","LoginForm","currentUser","onSubmitCallback","onChangeCallback","classes","className","TextField","email","onChange","required","fullWidth","id","label","autoComplete","autoFocus","password","FormControlLabel","control","Checkbox","Button","href","onClick","Box","mt","useFirebaseUsers","useContext","usersRef","firestore","collection","dispatch","useDispatch","createUser","useCallback","a","confirmPassword","cleanUser","auth","createUserWithEmailAndPassword","newUser","doc","set","getUsers","get","snapshot","docs","map","data","filter","isAdmin","getUser","then","editUser","checkIfToken","JSON","parse","localStorage","getItem","loginAdminUser","onErrorCallback","signInWithEmailAndPassword","setItem","stringify","signOut","catch","reason","LoginPage","useState","errorMessage","setErrorMessage","loginState","setLoginState","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","HowToVote","Alert","severity","style","params","target","prevState","MainListItems","history","useHistory","ListItem","button","push","ListItemIcon","MeetingRoom","ListItemText","primary","DashboardStyles","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","RightActionButton","buttonText","icon","Icon","Add","divider","marginBottom","ButtonPageStyles","direction","answersInitialState","QuestionsChart","answers","reduce","prevValue","currentValue","aswer","PieChart","Pie","dataKey","isAnimationActive","cx","cy","outerRadius","fill","Tooltip","RoomQuestion","isEnded","onClickCallback","Divider","ListItemSecondaryAction","disabled","useFirebaseRooms","roomsRef","questionsRef","createRoom","participants","questions","room","add","beginDate","toLocaleString","result","question","getRooms","ended","active","getRoom","roomId","getQuestions","where","endQuestion","editedQuestions","forEach","update","getQuestionsId","Room","setAnswers","questionsid","setQuestionsid","setQuestions","setRoom","currentQuestion","find","handleQuestionEnd","questionTitle","editedQuestiosn","useEffect","unsubscribe","onSnapshot","snapShot","docChanges","change","answer","users","roomQuestions","endRoom","merge","useRoom","useParams","alignContent","Flag","toUpperCase","List","CurrentRoomCard","date","card","minWidth","buttonGrid","RootPageStyles","Card","CardHeader","WatchSharp","subheader","toLocaleDateString","CardContent","handleRoomJoining","EndedRoomCard","topic","Object","isOpenMenu","setIsOpenMenu","anchorEl","useRef","participantsNumber","keys","handleMenuOpen","avatarIcon","success","endedRoomStyles","open","current","onClose","MenuItem","IconButton","ref","MoreVert","CheckSharp","toDateString","RoomsPageStyles","endedRoomsTitle","roomPageStyles","buttonContainer","borderRadius","textSubtitle","questionListItem","RoomsModalForm","handleCurrentRoomChange","handleCurrentQuestionChange","pushQuestion","currentRoom","endDate","InputLabel","Select","QuestionsList","deleteQuestion","index","DeleteTwoTone","roomQuestionInitialState","roomInitialState","usersTableColums","field","headerName","UsersTable","onCheckboxClick","selectionModel","details","setUsers","values","rows","columns","pageSize","checkboxSelection","disableSelectionOnClick","onSelectionModelChange","newModel","newUsers","selectedUsers","includes","firstName","lastName","job","period","handleUsersChange","NewRoomModal","handleClose","show","setParticipants","setCurrentRoom","setCurrentQuestion","questionIndex","filteredQuestions","handleQuestionSubmission","submissionCallback","useRooms","Dialog","maxWidth","DialogTitle","DialogContent","DialogActions","roomsInitialState","Rooms","showModal","setShowModal","rooms","setRooms","handleModalClose","SettingsPageStyles","avatarGrid","light","boxShadow","buttonList","background","optionText","logOut","Avatar","AccountCircle","SettingPageOptions","isDarkTheme","useSelector","shallowEqual","SettingsRounded","NightsStay","WbSunnySharp","Switch","desiredTheme","checked","QuestionAnswerTwoTone","PowerSettingsNew","Settings","Container","userInitialState","AddOrEditUserModalStyles","adormentSpan","AddOrEditUserForm","handleChange","defaultValue","InputProps","endAdornment","userValidationSchema","yup","shape","min","oneOf","AddOrEditUserModal","currentAction","setCurrentUser","errors","setErrors","error","validate","abortEarly","UserCard","userCardStyles","Users","toString","AdminRoutes","exact","path","BasePage","React","setOpen","AppBar","clsx","Toolbar","edge","noWrap","Drawer","AppRouter","prefersDarkTheme","useMediaQuery","reduxTheme","getTheme","choosedTheme","useMemo","createTheme","useAppTheme","isAuth","ThemeProvider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.added123.chunk.js","sourcesContent":["export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCV4FejTd50MsR-gmfg2lGq3UiVo_G7gig\",\r\n    authDomain: \"suffragium-bb211.firebaseapp.com\",\r\n    projectId: \"suffragium-bb211\",\r\n    storageBucket: \"suffragium-bb211.appspot.com\",\r\n    messagingSenderId: \"890623870215\",\r\n    appId: \"1:890623870215:web:6a099717bc43b8724eb1a2\",\r\n    measurementId: \"G-H0BN7L5Q72\",\r\n};\r\n","import { createContext, ReactElement } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { firebaseConfig } from \"../firebaseConfig\";\r\n\r\ntype FirebasePoviderProps = { children: ReactElement<any, any> };\r\n\r\nexport const FirebaseContext = createContext(firebase);\r\n\r\nexport const FirebaseProvider = ({ children }: FirebasePoviderProps) => {\r\n    \r\n    if(!firebase.apps.length){\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    return <FirebaseContext.Provider value={firebase}>{children}</FirebaseContext.Provider>;\r\n};\r\n","type appReducerType = {\r\n    theme: \"light\" | \"dark\";\r\n    user: {\r\n        name: string;\r\n        uid: string;\r\n    };\r\n}\r\n\r\nexport const appReducerInitialState: appReducerType = {\r\n    theme: \"dark\",\r\n    user: {\r\n        name: \"\",\r\n        uid: \"\",\r\n    }\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { AppReducer } from \"../helpers/reducers/appReducer\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        app: AppReducer,\r\n    },\r\n});\r\n\r\n","import { appReducerInitialState } from './appReducerInitialState';\r\nimport { actionType } from './types';\r\n\r\nexport const AppReducer = (state = appReducerInitialState, action: actionType) => {\r\n    switch (action.type) {\r\n        case 'SET_THEME':\r\n            return {\r\n                ...state,\r\n                theme: action.payload\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { RouteParams } from \"./types/routeParams\";\r\n\r\nexport const PublicRoute = ({\r\n    Component,\r\n    isAuthenticated,\r\n    rest,\r\n}: RouteParams) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props: Object) =>\r\n                isAuthenticated ? <Redirect to=\"/\"/> : <Component />\r\n            }\r\n        />\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { RouteParams } from \"./types/routeParams\";\r\n\r\nexport const PrivateRoute = ({\r\n    Component,\r\n    isAuthenticated,\r\n    rest,\r\n}: RouteParams) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props: Object) =>\r\n                isAuthenticated ? (\r\n                    <Component {...props}/>\r\n                ) : (\r\n                    <Redirect to=\"/auth\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const LoginPageStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(\"assets/loginBg.jpg\")',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));","import { Link, Typography } from \"@material-ui/core\";\r\n\r\nexport const Copyright = () => {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" gutterBottom>\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\">\r\n          Suffragium\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }","import React, { MouseEventHandler } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Copyright } from \"../../../components/Copyright\";\r\nimport { LoginPageStyles } from \"../helpers/LoginPageStyles\";\r\nimport { LoginUser } from \"../helpers/LoginTypes\";\r\n\r\ntype LoginFormType = {\r\n    currentUser: LoginUser;\r\n    onSubmitCallback: MouseEventHandler<HTMLAnchorElement>;\r\n    onChangeCallback: ({ ...validInputType }) => void;\r\n};\r\n\r\nexport const LoginForm = ({\r\n    currentUser,\r\n    onSubmitCallback,\r\n    onChangeCallback,\r\n}: LoginFormType) => {\r\n    const classes = LoginPageStyles();\r\n\r\n    return (\r\n        <div className={classes.form}>\r\n            <TextField\r\n                value={currentUser.email}\r\n                onChange={onChangeCallback}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Usuario\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n            />\r\n            <TextField\r\n                value={currentUser.password}\r\n                onChange={onChangeCallback}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Contraseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Recuerdame\"\r\n            />\r\n            <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                href=\"\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={onSubmitCallback}\r\n                className={classes.submit}\r\n            >\r\n                Iniciar Sesión\r\n            </Button>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n","import { userInitialState } from \"../../pages/admin/helpers/userInitialState\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { useContext, useCallback } from \"react\";\r\nimport { FirebaseContext } from \"../components/FirebaseProvider\";\r\nimport { LoginUser } from \"../../pages/auth/helpers/LoginTypes\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype userType = typeof userInitialState;\r\n\r\nexport const useFirebaseUsers = () => {\r\n    const firebase = useContext(FirebaseContext);\r\n    const usersRef = firebase.firestore().collection(\"Users\");\r\n    const dispatch = useDispatch();\r\n\r\n    const createUser = useCallback(\r\n        async (user: userType) => {\r\n            const { password, confirmPassword, ...cleanUser } = user;\r\n\r\n            const newUser = await firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(user.email, password);\r\n\r\n            usersRef\r\n                .doc(newUser.user?.uid)\r\n                .set({ ...cleanUser, id: newUser.user?.uid });\r\n        },\r\n        [firebase, usersRef]\r\n    );\r\n\r\n    const getUsers = useCallback(async () => {\r\n        const snapshot = await usersRef.get();\r\n        return snapshot.docs\r\n            .map((doc) => doc.data())\r\n            .filter((doc) => !doc.isAdmin) as userType[];\r\n    }, [usersRef]);\r\n\r\n    const getUser = useCallback(\r\n        (uid: string) => {\r\n            const snapshot = usersRef.doc(uid).get();\r\n            return snapshot.then((value) => ({ ...value.data(), uid } as any));\r\n        },\r\n        [usersRef]\r\n    );\r\n\r\n    const editUser = useCallback(\r\n        async (uid: string, user: userType) => {\r\n            const { password, confirmPassword, ...cleanUser } = user;\r\n            return await usersRef.doc(uid).set(cleanUser);\r\n        },\r\n        [usersRef]\r\n    );\r\n\r\n    const loginAdminUser = (user: LoginUser, onErrorCallback: Function) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(user.email, user.password)\r\n            .then((user) => {\r\n                getUser(user.user?.uid ?? \"\").then((value) => {\r\n                    if (value?.isAdmin) {\r\n                        localStorage.setItem(\"user\", JSON.stringify(value));\r\n                        dispatch({\r\n                            type: \"SET_USER\",\r\n                            payload: value,\r\n                        });\r\n                    } else {\r\n                        firebase.auth().signOut();\r\n                        onErrorCallback(\r\n                            \"Este usuario existe, pero no es administrador\"\r\n                        );\r\n                    }\r\n                });\r\n            })\r\n            .catch((reason) => {\r\n                onErrorCallback(\r\n                    \"Ocurrio un error, revise los datos ingresados\"\r\n                );\r\n            });\r\n    };\r\n\r\n    const checkIfToken = useCallback(() => {\r\n        const user = JSON.parse(localStorage.getItem(\"user\") ?? \"{}\");\r\n        if (user) {\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                payload: { uid: user?.uid, email: user?.email },\r\n            });\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return {\r\n        checkIfToken,\r\n        loginAdminUser,\r\n        createUser,\r\n        getUsers,\r\n        getUser,\r\n        editUser,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { HowToVote } from \"@material-ui/icons\";\r\nimport { LoginPageStyles } from \"./helpers/LoginPageStyles\";\r\nimport { useState } from 'react';\r\nimport { LoginUser } from \"./helpers/LoginTypes\";\r\nimport { LoginForm } from \"./components/LoginForm\";\r\nimport { validInputType, validSubmitType } from \"../../helpers/validInputType\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useFirebaseUsers } from '../../firebase/hooks/useFirebaseUsers';\r\n\r\nexport const LoginPage = () => {\r\n    const {loginAdminUser} = useFirebaseUsers();\r\n    const classes = LoginPageStyles();\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [loginState, setLoginState] = useState<LoginUser>({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleChange = ({\r\n        target: { name, value },\r\n    }: validInputType): void => {\r\n        setLoginState((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleLoginSubmission = (params: validSubmitType) => {\r\n        if (loginState.email && loginState.password) {\r\n            loginAdminUser(loginState, setErrorMessage as Function)\r\n        } else setErrorMessage(\"Asegurese de llenar todos los campos\");\r\n    };\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <HowToVote />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Iniciar Sesión\r\n                    </Typography>\r\n                    {errorMessage && (\r\n                        <Alert\r\n                            variant=\"outlined\"\r\n                            severity=\"error\"\r\n                            style={{ width: \"100%\", marginTop: \"10px\" }}\r\n                        >\r\n                            {errorMessage}\r\n                        </Alert>\r\n                    )}\r\n                    <LoginForm\r\n                        onSubmitCallback={\r\n                            handleLoginSubmission as unknown as ({\r\n                                ...validSubmitType\r\n                            }) => void\r\n                        }\r\n                        onChangeCallback={\r\n                            handleChange as unknown as ({\r\n                                ...validInputType\r\n                            }) => void\r\n                        }\r\n                        currentUser={loginState}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { MeetingRoom, Settings } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const MainListItems = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ListItem\r\n                button\r\n                onClick={() => {\r\n                    history.push(\"/\");\r\n                }}\r\n            >\r\n                <ListItemIcon>\r\n                    <MeetingRoom />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Salas\" />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                button\r\n                onClick={() => {\r\n                    history.push(\"/usuarios\");\r\n                }}\r\n            >\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Usuarios\" />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                button\r\n                onClick={() => {\r\n                    history.push(\"/ajustes\");\r\n                }}\r\n            >\r\n                <ListItemIcon>\r\n                    <Settings />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Ajustes\" />\r\n            </ListItem>\r\n        </>\r\n    );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const DashboardStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n  }));","import { Button, Grid, makeStyles, SvgIconTypeMap } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\n\r\ntype rightActionButtonProps = {\r\n    onClick: () => void;\r\n    buttonText: string;\r\n    color?: \"primary\" | \"inherit\" | \"default\" | \"secondary\" | undefined;\r\n    icon?: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>\r\n};\r\n\r\nexport const RightActionButton = ({\r\n    onClick,\r\n    buttonText,\r\n    icon: Icon = Add,\r\n    color = \"primary\"\r\n}: rightActionButtonProps) => {\r\n    const ButtonPageStyles = makeStyles((theme) => ({\r\n        divider: {\r\n            marginBottom: \"20px\",\r\n        },\r\n    }));\r\n\r\n    const classes = ButtonPageStyles();\r\n\r\n    return (\r\n        <Grid\r\n            className={classes.divider}\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"flex-end\"\r\n        >\r\n            <Button onClick={onClick} variant=\"contained\" color={color}>\r\n                <Icon />\r\n                {`${buttonText}`}\r\n            </Button>\r\n        </Grid>\r\n    );\r\n};\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Tooltip, Pie, PieChart } from \"recharts\";\r\nimport { questionAnswer } from \"../../helpers/types/questionAnswer\";\r\n\r\ntype questionChartParams = {\r\n    answers: questionAnswer[];\r\n};\r\n\r\nconst answersInitialState = [\r\n    { name: \"Si\", value: 0 },\r\n    { name: \"No\", value: 0 },\r\n    { name: \"Me abstengo\", value: 0 },\r\n];\r\n\r\nexport const QuestionsChart = ({ answers }: questionChartParams) => {\r\n\r\n    const data = answers.reduce((prevValue, currentValue) => {\r\n        if (currentValue.aswer === \"Si\") prevValue[0].value++;\r\n        if (currentValue.aswer === \"No\") prevValue[1].value++;\r\n        if (currentValue.aswer === \"Me abstengo\") prevValue[2].value++;\r\n        return prevValue;\r\n    }, answersInitialState);\r\n\r\n    return (\r\n        <Grid>\r\n            <PieChart width={400} height={400}>\r\n                <Pie\r\n                    dataKey=\"value\"\r\n                    isAnimationActive={false}\r\n                    data={data}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    label\r\n                />\r\n                <Tooltip />\r\n            </PieChart>\r\n        </Grid>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Divider, ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\ntype RoomQuestionType = {\r\n    title: string;\r\n    isEnded: boolean;\r\n    onClickCallback: (title: string) => void;\r\n};\r\n\r\nexport const RoomQuestion = ({\r\n    isEnded,\r\n    onClickCallback,\r\n    title,\r\n}: RoomQuestionType) => {\r\n    const handleQuestionEnd = () => {\r\n        onClickCallback(title);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Divider />\r\n            <ListItem>\r\n                <ListItemText primary={title} />\r\n                <ListItemSecondaryAction>\r\n                    <Button\r\n                        disabled={isEnded}\r\n                        onClick={handleQuestionEnd}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Terminar\r\n                    </Button>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <Divider />\r\n        </>\r\n    );\r\n};\r\n","import { useContext, useCallback } from \"react\";\r\nimport { roomType, roomQuestion } from \"../../pages/admin/helpers/types/rooms\";\r\nimport { FirebaseContext } from \"../components/FirebaseProvider\";\r\nexport const useFirebaseRooms = () => {\r\n    const firebase = useContext(FirebaseContext);\r\n    const roomsRef = firebase.firestore().collection(\"Rooms\");\r\n    const questionsRef = firebase.firestore().collection(\"Questions\");\r\n\r\n    const createRoom = useCallback(\r\n        ({ questions, ...room }: roomType, participants: Object[]) => {\r\n            roomsRef\r\n                .add({\r\n                    ...room,\r\n                    beginDate: new Date().toLocaleString(),\r\n                    isEnded: false,\r\n                    participants: participants,\r\n                })\r\n                .then((result) => {\r\n                    questionsRef.add({\r\n                        questions: questions.map((question) => ({\r\n                            ...question,\r\n                            isEnded: false,\r\n                        })),\r\n                        room: result.id,\r\n                    });\r\n                });\r\n        },\r\n        [questionsRef, roomsRef]\r\n    );\r\n\r\n    const getRooms = useCallback(() => {\r\n        return roomsRef.get().then((result) => {\r\n            return {\r\n                ended: result.docs\r\n                    .map(\r\n                        (room) =>\r\n                            ({\r\n                                id: room.id,\r\n                                ...room.data(),\r\n                            } as unknown as roomType)\r\n                    )\r\n                    .filter((room) => room.isEnded),\r\n                active: result.docs\r\n                    .map(\r\n                        (room) =>\r\n                            ({\r\n                                id: room.id,\r\n                                ...room.data(),\r\n                            } as unknown as roomType)\r\n                    )\r\n                    .filter((room) => !room.isEnded),\r\n            };\r\n        });\r\n    }, [roomsRef]);\r\n\r\n    const getRoom = useCallback(\r\n        (roomId: string) => {\r\n            return roomsRef\r\n                .doc(roomId)\r\n                .get()\r\n                .then((room) => {\r\n                    return room.data();\r\n                });\r\n        },\r\n        [roomsRef]\r\n    );\r\n\r\n    const getQuestions = useCallback(\r\n        (roomId: string) => {\r\n            return questionsRef\r\n                .where(\"room\", \"==\", roomId)\r\n                .get()\r\n                .then((questions) => {\r\n                    return questions.docs.map((question) => question.data());\r\n                });\r\n        },\r\n        [questionsRef]\r\n    );\r\n\r\n    const endQuestion = useCallback(\r\n        (roomId: string, editedQuestions: roomQuestion[]) => {\r\n            questionsRef\r\n                .where(\"room\", \"==\", roomId)\r\n                .get()\r\n                .then((questions) => {\r\n                    questions.docs.forEach((question) => {\r\n                        questionsRef.doc(question.id).update({\r\n                            questions: editedQuestions,\r\n                        });\r\n                    });\r\n                });\r\n        },\r\n        [questionsRef]\r\n    );\r\n\r\n    const getQuestionsId = useCallback(\r\n        (roomId: string) => {\r\n            return questionsRef\r\n                .where(\"room\", \"==\", roomId)\r\n                .get()\r\n                .then((questions) => {\r\n                    return questions.docs.map((question) => question.id)[0];\r\n                });\r\n        },\r\n        [questionsRef]\r\n    );\r\n\r\n    return {\r\n        endQuestion,\r\n        createRoom,\r\n        getRoom,\r\n        getRooms,\r\n        getQuestions,\r\n        getQuestionsId,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { RightActionButton } from \"../../components/RightActionButton\";\r\nimport { Flag } from \"@material-ui/icons\";\r\nimport { QuestionsChart } from \"./components/roomPage/QuestionsChart\";\r\nimport { List, Typography } from \"@material-ui/core\";\r\nimport { RoomQuestion } from \"./components/roomPage/RoomQuestion\";\r\nimport { useRoom } from \"./hooks/useRoom\";\r\n\r\nexport const Room = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const {\r\n        currentQuestion,\r\n        handleQuestionEnd,\r\n        questions,\r\n        room,\r\n        answers,\r\n        endRoom,\r\n    } = useRoom(id);\r\n\r\n    return (\r\n        <Grid container alignContent=\"center\" spacing={4}>\r\n            <RightActionButton\r\n                buttonText=\"Terminar sesión\"\r\n                onClick={endRoom}\r\n                color=\"secondary\"\r\n                icon={Flag}\r\n            />\r\n            <Grid>\r\n                <Typography variant=\"h5\">\r\n                    {room?.title.toUpperCase()}\r\n                </Typography>\r\n                <Typography variant=\"caption\">{currentQuestion}</Typography>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                alignContent=\"space-between\"\r\n            >\r\n                <QuestionsChart answers={answers} />\r\n                <List style={{ width: \"100%\" }}>\r\n                    {questions.map((question) => (\r\n                        <RoomQuestion\r\n                            isEnded={question.isEnded}\r\n                            title={question.question}\r\n                            onClickCallback={handleQuestionEnd}\r\n                        />\r\n                    ))}\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import { useFirebaseRooms } from \"../../../firebase/hooks/useFirebaseRooms\";\r\nimport { roomQuestion, roomType } from \"../helpers/types/rooms\";\r\nimport { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../../../firebase/components/FirebaseProvider\";\r\nimport { questionAnswer } from '../helpers/types/questionAnswer';\r\n\r\nexport const useRoom = (roomId: string) => {\r\n    const firebase = useContext(FirebaseContext);\r\n    const history = useHistory();\r\n    const [answers, setAnswers] = useState<questionAnswer[]>([]);\r\n    const [questionsid, setQuestionsid] = useState(\"\");\r\n    const { getRoom, getQuestions, endQuestion, getQuestionsId } =\r\n        useFirebaseRooms();\r\n    const [questions, setQuestions] = useState<roomQuestion[]>([]);\r\n    const [room, setRoom] = useState<roomType>();\r\n\r\n    const currentQuestion = questions.find(\r\n        (question) => !question.isEnded\r\n    )?.question;\r\n\r\n    const handleQuestionEnd = useCallback(\r\n        (questionTitle: string) => {\r\n            const editedQuestiosn = questions.map((question) => {\r\n                if (question.question === questionTitle)\r\n                    question.isEnded = true;\r\n                return question;\r\n            });\r\n\r\n            endQuestion(roomId, editedQuestiosn);\r\n            setQuestions(editedQuestiosn);\r\n        },\r\n        [endQuestion, roomId, questions]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!room?.title) {\r\n            getRoom(roomId).then((room) => {\r\n                setRoom(room as roomType);\r\n            });\r\n        }\r\n    }, [getRoom, roomId, room?.title]);\r\n\r\n    const endRoom = () => {\r\n        firebase\r\n            .firestore()\r\n            .collection(\"Rooms\")\r\n            .doc(roomId)\r\n            .set({ isEnded: true }, { merge: true })\r\n            .then(() => {\r\n                history.push(\"/\");\r\n            });\r\n    };\r\n\r\n    const unsubscribe = firebase\r\n        .firestore()\r\n        .collection(\"Answers\")\r\n        .where(\"questions\", \"==\", questionsid)\r\n        .onSnapshot((snapShot) => {\r\n            snapShot.docChanges().forEach((change) => {\r\n                setAnswers(\r\n                    snapShot.docs\r\n                        .map((answer) => answer.data())[0]\r\n                        .users.filter(\r\n                            (answer: questionAnswer) => answer.question === currentQuestion\r\n                        ) ?? ([] as questionAnswer[])\r\n                );\r\n            });\r\n        });\r\n\r\n    useEffect(() => {\r\n        if (!questions.length) {\r\n            getQuestions(roomId).then(([questions]) => {\r\n                const { questions: roomQuestions } = questions as any;\r\n                setQuestions(roomQuestions as roomQuestion[]);\r\n            });\r\n        }\r\n    }, [getQuestions, roomId, questions.length]);\r\n\r\n    useEffect(() => {\r\n        if (!questionsid) {\r\n            getQuestionsId(roomId).then(setQuestionsid);\r\n        }\r\n    }, [getQuestionsId, questionsid, roomId]);\r\n\r\n    useEffect(() => () => unsubscribe());\r\n\r\n    return {\r\n        currentQuestion,\r\n        room,\r\n        questions,\r\n        handleQuestionEnd,\r\n        questionsid,\r\n        endRoom,\r\n        answers,\r\n    };\r\n};\r\n","import {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { WatchSharp } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype CurrentRoomType = {\r\n    title: string;\r\n    date: string;\r\n    roomId: string;\r\n};\r\n\r\nexport const CurrentRoomCard = ({ date, roomId, title }: CurrentRoomType) => {\r\n    const history = useHistory();\r\n    const RootPageStyles = makeStyles({\r\n        card: {\r\n            width: \"30%\",\r\n            minWidth: \"250px\",\r\n        },\r\n        buttonGrid: {\r\n            display: \"flex\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n        },\r\n    });\r\n    const classes = RootPageStyles();\r\n\r\n    const handleRoomJoining = (roomId: string) => {\r\n        history.push(`sala/${roomId}`);\r\n    };\r\n\r\n    return (\r\n        <Grid item alignItems=\"center\" justifyContent=\"center\">\r\n            <Card className={classes.card} variant=\"elevation\">\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar>\r\n                            <WatchSharp color=\"secondary\" />\r\n                        </Avatar>\r\n                    }\r\n                    title={<Typography variant=\"h6\">{title}</Typography>}\r\n                    subheader={new Date(date).toLocaleDateString()}\r\n                />\r\n                <CardContent>\r\n                    <Grid className={classes.buttonGrid} alignContent=\"center\">\r\n                        <Button\r\n                            onClick={() => {\r\n                                handleRoomJoining(roomId);\r\n                            }}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Entrar a la reunión\r\n                        </Button>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n","import {\r\n    Avatar,\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    IconButton,\r\n    makeStyles,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { CheckSharp, MoreVert } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\ntype endedRoomProps = {\r\n    topic?: string;\r\n    date?: string;\r\n    participants?: Object;\r\n};\r\n\r\nexport const EndedRoomCard = ({\r\n    topic = \"test\",\r\n    participants = Object,\r\n    date = \"2020-2024\",\r\n}: endedRoomProps) => {\r\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n    const anchorEl = useRef(null);\r\n\r\n    const participantsNumber = Object.keys(participants ?? {}).length;\r\n\r\n    const handleMenuOpen = () => {\r\n        setIsOpenMenu(!isOpenMenu);\r\n    };\r\n\r\n    const endedRoomStyles = makeStyles((theme) => ({\r\n        avatarIcon: {\r\n            width: \"30px\",\r\n            height: \"30px\",\r\n            color: theme.palette.grey[100],\r\n            backgroundColor: theme.palette.success.main,\r\n        },\r\n    }));\r\n\r\n    const classes = endedRoomStyles();\r\n\r\n    return (\r\n        <Grid xs={12} sm={3} item>\r\n            <Card variant=\"elevation\">\r\n                <Menu\r\n                    open={isOpenMenu}\r\n                    anchorEl={anchorEl.current}\r\n                    onClose={handleMenuOpen}\r\n                >\r\n                    <MenuItem>Detalles</MenuItem>\r\n                </Menu>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton ref={anchorEl} onClick={handleMenuOpen}>\r\n                            <MoreVert />\r\n                        </IconButton>\r\n                    }\r\n                    avatar={\r\n                        <Avatar className={classes.avatarIcon}>\r\n                            <CheckSharp />\r\n                        </Avatar>\r\n                    }\r\n                    title={new Date(date).toDateString()}\r\n                    subheader={`${participantsNumber} participantes`}\r\n                ></CardHeader>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Typography variant=\"h4\">{topic}</Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const RoomsPageStyles = makeStyles({\r\n    divider: {\r\n        marginBottom: \"20px\",\r\n        marginTop: \"20px\",\r\n    },\r\n    endedRoomsTitle: {\r\n        marginBottom: \"20px\",\r\n    }\r\n});","import { makeStyles } from '@material-ui/core';\r\nexport const roomPageStyles = makeStyles((theme) => ({\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n    },\r\n    button: {\r\n        borderRadius: \"50px\",\r\n    },\r\n    textSubtitle: {\r\n        marginTop: \"15px\",\r\n    },\r\n    questionListItem: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { roomPageStyles } from \"../../helpers/styles/RoomPageStyles\";\r\nimport { roomQuestion, roomType } from \"../../helpers/types/rooms\";\r\n\r\ntype RoomsModalFormTypes = {\r\n    handleCurrentRoomChange: ({\r\n        target: { value, name },\r\n    }: React.ChangeEvent<{\r\n        name?: string | undefined;\r\n        value: unknown;\r\n    }>) => void;\r\n    handleCurrentQuestionChange: ({\r\n        target: { value, name },\r\n    }: React.ChangeEvent<{\r\n        name?: string | undefined;\r\n        value: unknown;\r\n    }>) => void;\r\n    pushQuestion: () => void;\r\n    currentRoom: roomType;\r\n    currentQuestion: roomQuestion;\r\n};\r\n\r\nexport const RoomsModalForm = ({\r\n    handleCurrentRoomChange = () => {},\r\n    handleCurrentQuestionChange = () => {},\r\n    pushQuestion,\r\n    currentRoom,\r\n    currentQuestion,\r\n}: RoomsModalFormTypes) => {\r\n    const classes = roomPageStyles();\r\n    const questionDuration = [\"2\", \"5\", \"10\"];\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item sm={8}>\r\n                <TextField\r\n                    onChange={handleCurrentRoomChange}\r\n                    value={currentRoom.title}\r\n                    required\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    label=\"Titulo de la agenda\"\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n            <Grid item sm={4}>\r\n                <TextField\r\n                    onChange={handleCurrentRoomChange}\r\n                    value={currentRoom.endDate}\r\n                    type=\"time\"\r\n                    required\r\n                    id=\"endDate\"\r\n                    name=\"endDate\"\r\n                    label=\"Hora de finalización\"\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n            <Grid item sm={7}>\r\n                <TextField\r\n                    onChange={handleCurrentQuestionChange}\r\n                    value={currentQuestion.question}\r\n                    required\r\n                    id=\"question\"\r\n                    name=\"question\"\r\n                    label=\"Pregunta\"\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n            <Grid item sm={3}>\r\n                <InputLabel>Duracion</InputLabel>\r\n                <Select\r\n                    onChange={handleCurrentQuestionChange}\r\n                    value={currentQuestion.duration}\r\n                    required\r\n                    id=\"duration\"\r\n                    name=\"duration\"\r\n                    label=\"Duration\"\r\n                    fullWidth\r\n                >\r\n                    {questionDuration.map((duration) => (\r\n                        <MenuItem value={duration}>{duration}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </Grid>\r\n            <Grid className={classes.buttonContainer} item sm={2}>\r\n                <Button\r\n                    onClick={pushQuestion}\r\n                    className={classes.button}\r\n                    title=\"Añadir Pregunta\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    <Add />\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { roomType } from \"../../helpers/types/rooms\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { DeleteTwoTone } from \"@material-ui/icons\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { roomPageStyles } from \"../../helpers/styles/RoomPageStyles\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\ntype QuestionsListTypes = {\r\n    currentRoom: roomType;\r\n    deleteQuestion: Function;\r\n};\r\n\r\nexport const QuestionsList = ({\r\n    currentRoom,\r\n    deleteQuestion,\r\n}: QuestionsListTypes) => {\r\n    const classes = roomPageStyles();\r\n\r\n    return currentRoom.questions.length ? (\r\n        <>\r\n            <Typography className={classes.textSubtitle} variant=\"body1\">\r\n                Preguntas\r\n            </Typography>\r\n            <List>\r\n                {currentRoom.questions.map(({ question, duration }, index) => (\r\n                    <>\r\n                        <Divider />\r\n                        <ListItem\r\n                            className={classes.questionListItem}\r\n                            key={question + index}\r\n                        >\r\n                            <span>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    {question}\r\n                                </Typography>\r\n                                &nbsp;\r\n                                <Typography variant=\"caption\">\r\n                                    {`${duration} Min.`}\r\n                                </Typography>\r\n                            </span>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    deleteQuestion(index);\r\n                                }}\r\n                            >\r\n                                <DeleteTwoTone color=\"error\" />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </>\r\n                ))}\r\n            </List>\r\n        </>\r\n    ) : (\r\n        <Alert\r\n            className={classes.textSubtitle}\r\n            variant=\"outlined\"\r\n            severity=\"info\"\r\n        >\r\n            Todavia no hay preguntas en esta reunion\r\n        </Alert>\r\n    );\r\n};\r\n","export type NewRoomModalProps = {\r\n    show: boolean;\r\n    handleClose: () => void;\r\n};\r\n\r\nexport type roomQuestion = {\r\n    question: string;\r\n    duration: \"2\" | \"5\" | \"10\";\r\n    isEnded: boolean;\r\n};\r\n\r\nexport const roomQuestionInitialState: roomQuestion = {\r\n    duration: \"2\",\r\n    question: \"\",\r\n    isEnded: false,\r\n};\r\n\r\nexport type currentRoom = {\r\n    endDate: typeof Date | null;\r\n    beginDate: typeof Date | null;\r\n    title: string;\r\n    ended: boolean;\r\n    questions: roomQuestion[];\r\n};\r\n\r\nexport type roomType = {\r\n    id?: string;\r\n    beginDate: null;\r\n    endDate: null;\r\n    title: string;\r\n    isEnded: boolean;\r\n    questions: roomQuestion[];\r\n    participants?: Object;\r\n};\r\n\r\nexport const roomInitialState: roomType = {\r\n    beginDate: null,\r\n    endDate: null,\r\n    title: \"\",\r\n    isEnded: false,\r\n    questions: [],\r\n};\r\n","import { GridColDef } from \"@material-ui/data-grid\";\r\n\r\nexport const usersTableColums: GridColDef[] = [\r\n    { field: \"firstName\", width: 150, headerName: \"Nombre\" },\r\n    { field: \"lastName\", width: 150, headerName: \"Apellido\" },\r\n    {\r\n        field: \"email\",\r\n        width: 150, headerName: \"Email\",\r\n    },\r\n];","import { DataGrid, GridSelectionModel } from \"@material-ui/data-grid\";\r\nimport React from \"react\";\r\nimport { usersTableColums } from \"../../helpers/usersTableColums\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useFirebaseUsers } from \"../../../../firebase/hooks/useFirebaseUsers\";\r\nimport { userInitialState } from \"../../helpers/userInitialState\";\r\n\r\ntype UsersTableParams = {\r\n    onCheckboxClick?: (\r\n        selectionModel: GridSelectionModel,\r\n        details?: any\r\n    ) => void;\r\n};\r\n\r\nexport const UsersTable = ({\r\n    onCheckboxClick = (selectionModel: GridSelectionModel, details?: any) => {},\r\n}: UsersTableParams) => {\r\n    const { getUsers } = useFirebaseUsers();\r\n    const [users, setUsers] = useState<typeof userInitialState[]>([]);\r\n\r\n    const handleUsersChange = (newUsers: string[]) => {\r\n        const selectedUsers = users.reduce((prevValue, currentValue) => {\r\n            if (newUsers.includes(currentValue.id)) {\r\n                prevValue[currentValue.id as keyof {}] = {\r\n                    name: `${currentValue.firstName} ${currentValue.lastName}`,\r\n                    job: currentValue.job,\r\n                    period: currentValue.period,\r\n                };\r\n            }\r\n            return prevValue;\r\n        }, {} as any);\r\n        onCheckboxClick(selectedUsers);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUsers().then((values) => {\r\n            setUsers(values);\r\n        });\r\n    }, [getUsers]);\r\n\r\n    return (\r\n        <Grid container style={{ height: \"300px\", width: \"100%\" }}>\r\n            <DataGrid\r\n                rows={users}\r\n                columns={usersTableColums}\r\n                pageSize={5}\r\n                checkboxSelection\r\n                disableSelectionOnClick\r\n                onSelectionModelChange={(newModel) => {\r\n                    handleUsersChange(newModel as string[]);\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n// @ts-ignore\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { NewRoomModalProps } from \"../../helpers/types/rooms\";\r\nimport { RoomsModalForm } from \"./RoomsModalForm\";\r\nimport { QuestionsList } from \"./QuestionsList\";\r\nimport { useRooms } from \"../../hooks/useRooms\";\r\nimport { roomPageStyles } from \"../../helpers/styles/RoomPageStyles\";\r\nimport { UsersTable } from \"./UsersTable\";\r\n\r\nexport const NewRoomModal = ({ handleClose, show }: NewRoomModalProps) => {\r\n    const classes = roomPageStyles();\r\n    const {\r\n        deleteQuestion,\r\n        currentQuestion,\r\n        currentRoom,\r\n        errorMessage,\r\n        handleCurrentQuestionChange,\r\n        handleCurrentRoomChange,\r\n        pushQuestion,\r\n        setParticipants,\r\n        handleQuestionSubmission,\r\n    } = useRooms();\r\n\r\n    return (\r\n        <Dialog fullWidth maxWidth={\"sm\"} open={show} onClose={handleClose}>\r\n            <DialogTitle>\r\n                <Typography variant=\"h5\">Nueva Sesión</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {errorMessage && (\r\n                    <Alert variant=\"outlined\" severity=\"error\">\r\n                        {errorMessage}\r\n                    </Alert>\r\n                )}\r\n                <RoomsModalForm\r\n                    currentQuestion={currentQuestion}\r\n                    currentRoom={currentRoom}\r\n                    handleCurrentQuestionChange={handleCurrentQuestionChange}\r\n                    handleCurrentRoomChange={handleCurrentRoomChange}\r\n                    pushQuestion={pushQuestion}\r\n                />\r\n                <QuestionsList\r\n                    currentRoom={currentRoom}\r\n                    deleteQuestion={deleteQuestion}\r\n                />\r\n                <Typography className={classes.textSubtitle} variant=\"body1\">\r\n                    Usuarios de la sala\r\n                </Typography>\r\n                <UsersTable onCheckboxClick={setParticipants as any} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    onClick={() => {\r\n                        handleQuestionSubmission(handleClose);\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Comenzar Reunión\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useFirebaseRooms } from \"../../../firebase/hooks/useFirebaseRooms\";\r\nimport { roomInitialState, roomType } from \"../helpers/types/rooms\";\r\nimport { roomQuestion, roomQuestionInitialState } from \"../helpers/types/rooms\";\r\nexport const useRooms = () => {\r\n    const { createRoom } = useFirebaseRooms();\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [participants, setParticipants] = useState([]);\r\n    const [currentRoom, setCurrentRoom] = useState<roomType>(roomInitialState);\r\n    const [currentQuestion, setCurrentQuestion] = useState<roomQuestion>(\r\n        roomQuestionInitialState\r\n    );\r\n\r\n    const handleCurrentRoomChange = ({\r\n        target: { value, name },\r\n    }: React.ChangeEvent<{ name?: string | undefined; value: unknown }>) => {\r\n        setCurrentRoom((prevState) => ({\r\n            ...prevState,\r\n            [name ?? \"title\"]: value,\r\n        }));\r\n    };\r\n\r\n    const handleCurrentQuestionChange = ({\r\n        target: { value, name },\r\n    }: React.ChangeEvent<{ name?: string | undefined; value: unknown }>) => {\r\n        setCurrentQuestion((prevState) => ({\r\n            ...prevState,\r\n            [name ?? \"question\"]: value,\r\n        }));\r\n    };\r\n\r\n    const pushQuestion = () => {\r\n        if (currentQuestion.question) {\r\n            setErrorMessage(\"\");\r\n            setCurrentRoom((prevState) => ({\r\n                ...prevState,\r\n                questions: [...prevState.questions, currentQuestion],\r\n            }));\r\n            setCurrentQuestion(roomQuestionInitialState);\r\n        } else setErrorMessage(\"Debe escribir el titulo de la pregunta\");\r\n    };\r\n\r\n    const deleteQuestion = (questionIndex: number) => {\r\n        const filteredQuestions = currentRoom.questions.filter(\r\n            (question, index) => index !== questionIndex\r\n        );\r\n        setCurrentRoom((prevState) => ({\r\n            ...prevState,\r\n            questions: filteredQuestions,\r\n        }));\r\n    };\r\n\r\n    const handleQuestionSubmission = (submissionCallback: Function) => {\r\n        if (currentRoom.title && currentRoom.endDate) {\r\n            createRoom(currentRoom, participants);\r\n            setCurrentRoom(roomInitialState);\r\n            submissionCallback();\r\n        } else setErrorMessage(\"Faltan campos\");\r\n    };\r\n\r\n    return {\r\n        currentQuestion,\r\n        currentRoom,\r\n        errorMessage,\r\n        pushQuestion,\r\n        deleteQuestion,\r\n        handleCurrentQuestionChange,\r\n        handleCurrentRoomChange,\r\n        handleQuestionSubmission,\r\n        setParticipants,\r\n    };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Divider, Typography } from \"@material-ui/core\";\r\nimport { RightActionButton } from \"../../components/RightActionButton\";\r\nimport { CurrentRoomCard } from \"./components/roomsPage/CurrentRoomCard\";\r\nimport { EndedRoomCard } from \"./components/roomsPage/EndedRoomCard\";\r\nimport { RoomsPageStyles } from \"./helpers/styles/RoomsPageStyles\";\r\nimport { NewRoomModal } from \"./components/roomsPage/NewRoomModal\";\r\nimport { useFirebaseRooms } from \"../../firebase/hooks/useFirebaseRooms\";\r\nimport { useEffect } from \"react\";\r\nimport { roomType } from \"./helpers/types/rooms\";\r\n\r\ntype activeAndEnded = {\r\n    ended: roomType[];\r\n    active: roomType[];\r\n};\r\n\r\nconst roomsInitialState = {\r\n    active: [],\r\n    ended: [],\r\n}\r\n\r\nexport const Rooms = () => {\r\n    const classes = RoomsPageStyles();\r\n    const { getRooms } = useFirebaseRooms();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [rooms, setRooms] = useState<activeAndEnded>(roomsInitialState);\r\n\r\n    const handleModalClose = () => {\r\n        setShowModal(!showModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(rooms === roomsInitialState)\r\n            getRooms().then(setRooms as () => unknown);\r\n    }, [getRooms, rooms]);\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                spacing={4}\r\n                alignContent=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <RightActionButton\r\n                    buttonText=\"Nueva Sala\"\r\n                    onClick={handleModalClose}\r\n                />\r\n                {rooms.active.map(({ title, id, beginDate, endDate }) => (\r\n                    <CurrentRoomCard\r\n                        title={title}\r\n                        roomId={id ?? \"\"}\r\n                        date={new Date(\r\n                            beginDate ?? endDate ?? \"\"\r\n                        ).toLocaleDateString()}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            <Divider className={classes.divider} />\r\n            <Typography className={classes.endedRoomsTitle} variant=\"h6\">\r\n                Reuniones ya finalizadas\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n                {rooms.ended.map(({ title, beginDate, participants }) => {\r\n                    return (\r\n                        <EndedRoomCard\r\n                            topic={title}\r\n                            date={beginDate ?? \"\"}\r\n                            participants={participants}\r\n                        />\r\n                    );\r\n                })}\r\n            </Grid>\r\n            <NewRoomModal handleClose={handleModalClose} show={showModal} />\r\n        </>\r\n    );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const SettingsPageStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        height: \"70vh\",\r\n    },\r\n    avatarGrid: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        marginBottom: \"20px\",\r\n        backgroundColor: theme.palette.primary.light,\r\n        height: \"200px\",\r\n        width: \"200px\",\r\n        boxShadow: \"2px 4px 5px 2px #0000004c\",\r\n    },\r\n    icon: {\r\n        height: \"180px\",\r\n        width: \"180px\",\r\n    },\r\n    buttonList: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"300px\",\r\n    },\r\n    optionText: {},\r\n    logOut: {\r\n        color: theme.palette.secondary.main,\r\n    },\r\n}));","import { Grid, Typography, Avatar as AvatarIcon } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport { SettingsPageStyles } from \"../../helpers/styles/SettingsPageStyles\";\r\n\r\ntype AvatarPros = {\r\n    name?: string;\r\n};\r\n\r\nexport const Avatar = ({ name = \"Admin Name\" }: AvatarPros) => {\r\n    const classes = SettingsPageStyles();\r\n    return (\r\n        <Grid container className={classes.avatarGrid}>\r\n            <AvatarIcon className={classes.avatar}>\r\n                <AccountCircle className={classes.icon}></AccountCircle>\r\n            </AvatarIcon>\r\n            <Typography variant=\"h4\">{name}</Typography>\r\n        </Grid>\r\n    );\r\n};\r\n","import {\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Switch,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    NightsStay,\r\n    PowerSettingsNew,\r\n    QuestionAnswerTwoTone,\r\n    SettingsRounded,\r\n    WbSunnySharp,\r\n} from \"@material-ui/icons\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { SettingsPageStyles } from \"../../helpers/styles/SettingsPageStyles\";\r\nimport { appDispatch, rootState } from \"../../../../redux/index\";\r\n\r\nexport const SettingPageOptions = () => {\r\n    const appTheme = useSelector<rootState>(\r\n        (state) => state.app.theme,\r\n        shallowEqual\r\n    );\r\n\r\n    const isDarkTheme = appTheme === \"dark\";\r\n\r\n    const dispatch = useDispatch<appDispatch>();\r\n\r\n    const handleThemeChange = () => {\r\n        const desiredTheme = isDarkTheme ? \"light\" : \"dark\";\r\n        dispatch({ type: \"SET_THEME\", payload: desiredTheme });\r\n        localStorage.setItem(\"theme\", desiredTheme);\r\n    };\r\n\r\n    const classes = SettingsPageStyles();\r\n    return (\r\n        <Grid>\r\n            <List component={\"nav\"} className={classes.buttonList}>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <SettingsRounded />\r\n                    </ListItemIcon>\r\n                    <ListItemText className={`${classes.optionText}`}>\r\n                        Ajustes De la cuenta\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemIcon>\r\n                        {isDarkTheme ? <NightsStay /> : <WbSunnySharp />}\r\n                    </ListItemIcon>\r\n                    <ListItemText className={`${classes.optionText}`}>\r\n                        Cambiar tema\r\n                    </ListItemText>\r\n                    <Switch\r\n                        onChange={handleThemeChange}\r\n                        checked={isDarkTheme}\r\n                        name=\"changeTheme\"\r\n                    />\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <QuestionAnswerTwoTone />\r\n                    </ListItemIcon>\r\n                    <ListItemText className={`${classes.optionText}`}>\r\n                        Contactar desarrolladores\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon className={classes.logOut}>\r\n                        <PowerSettingsNew />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        className={`${classes.logOut} ${classes.optionText}`}\r\n                    >\r\n                        Cerrar Sesión\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </List>\r\n        </Grid>\r\n    );\r\n};\r\n","import { SettingsPageStyles } from \"./helpers/styles/SettingsPageStyles\";\r\nimport { Avatar } from \"./components/settingsPage/Avatar\";\r\nimport { SettingPageOptions } from \"./components/settingsPage/SettingPageOptions\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Settings = () => {\r\n    const classes = SettingsPageStyles();\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Avatar name=\"Jorge Tamariz\" />\r\n            <SettingPageOptions/>\r\n        </Container>\r\n    );\r\n};\r\n","export const userInitialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    job: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    period: new Date().getFullYear(),\r\n    id: \"\"\r\n};","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const AddOrEditUserModalStyles = makeStyles((theme) => ({\r\n    adormentSpan: {\r\n        whiteSpace: \"nowrap\",\r\n        marginLeft: \"2vw\"\r\n    }\r\n}));","import React, { ChangeEventHandler } from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { userInitialState } from \"../../helpers/userInitialState\";\r\nimport { AddOrEditUserModalStyles } from \"../../helpers/styles/UsersPageStyles\";\r\n\r\ntype AddOrEditUserFormProps = {\r\n    handleChange: ChangeEventHandler<HTMLInputElement>\r\n    currentUser: typeof userInitialState\r\n}\r\n\r\nexport const AddOrEditUserForm = ({handleChange, currentUser}: AddOrEditUserFormProps) => {\r\n    const classes = AddOrEditUserModalStyles();\r\n\r\n    return (\r\n        <Grid container spacing={3} style={{paddingTop: \"20px\"}}>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    value={currentUser.firstName}\r\n                    required\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    label=\"Nombres\"\r\n                    fullWidth\r\n                    autoComplete=\"given-name\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    value={currentUser.lastName}\r\n                    required\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    label=\"Apellidos\"\r\n                    fullWidth\r\n                    autoComplete=\"family-name\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    value={currentUser.email}\r\n                    required\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Correo Electrónico\"\r\n                    fullWidth\r\n                    autoComplete=\"family-name\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    value={currentUser.password}\r\n                    required\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    fullWidth\r\n                    autoComplete=\"family-name\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    value={currentUser.confirmPassword}\r\n                    required\r\n                    type=\"password\"\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    label=\"Confirmar Contraseña\"\r\n                    fullWidth\r\n                    autoComplete=\"family-name\"\r\n                />\r\n            </Grid>\r\n            <Grid item sm={7} xs={12}>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    value={currentUser.job}\r\n                    required\r\n                    id=\"job\"\r\n                    name=\"job\"\r\n                    label=\"Circunscripción\"\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n            <Grid item sm={5} xs={12}>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    value={currentUser.period}\r\n                    id=\"period\"\r\n                    defaultValue={new Date().getFullYear()}\r\n                    type={\"number\"}\r\n                    name=\"period\"\r\n                    label=\"Periodo\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <span className={classes.adormentSpan}>{`Hasta ${\r\n                                JSON.parse(\r\n                                    currentUser.period as unknown as string\r\n                                ) + 4\r\n                            }`}</span>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import * as yup from \"yup\"\r\n\r\nexport const userValidationSchema = yup.object().shape({\r\n    firstName: yup.string().required(\"el campo primer nobre es requerido\"),\r\n    lastName: yup.string().required(\"el campo apellido es requerido\"),\r\n    email: yup.string().required(\"el campo email es requerido\"),\r\n    job: yup.string().required(\"el campo cargo es requerido\"),\r\n    password: yup\r\n        .string()\r\n        .required(\"el campo contraseña es requerido\")\r\n        .min(6, \"El campo contraseña debe tener al menos 6 digitos\"),\r\n    confirmPassword: yup\r\n        .string()\r\n        .required(\"el campo confirmar contraseña es requerido\")\r\n        .oneOf(\r\n            [yup.ref(\"password\"), null],\r\n            \"Confirmar contraseña debe ser igual a contraseña\"\r\n        ),\r\n    period: yup.string().required(\"el campo periodo es requerido\"),\r\n});","import {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n} from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useState } from \"react\";\r\nimport { userInitialState } from \"../../helpers/userInitialState\";\r\nimport { AddOrEditUserForm } from \"./AddOrEditUserForm\";\r\nimport { userValidationSchema } from \"../../helpers/usersInitialState\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\ntype AddOrEditUserModalProps = {\r\n    id?: number;\r\n    show: boolean;\r\n    submissionCallback: Function;\r\n    handleClose: () => void;\r\n};\r\n\r\nexport const AddOrEditUserModal = ({\r\n    id,\r\n    show = false,\r\n    handleClose,\r\n    submissionCallback = () => {},\r\n}: AddOrEditUserModalProps) => {\r\n    const currentAction = id ? \"Editar\" : \"Crear\";\r\n    const [currentUser, setCurrentUser] = useState(userInitialState);\r\n    const [errors, setErrors] = useState<string[]>([]);\r\n\r\n    const handleInputChange = ({\r\n        target: { value, name },\r\n    }: ChangeEvent<HTMLInputElement>) => {\r\n        setCurrentUser((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmission = () => {\r\n        userValidationSchema\r\n            .validate(currentUser, { abortEarly: false })\r\n            .then(async (values) => {\r\n                setCurrentUser(userInitialState);\r\n                handleClose();\r\n                await submissionCallback(values);\r\n            })\r\n            .catch(({ errors }) => {\r\n                setErrors(errors);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth={\"sm\"}\r\n            open={show}\r\n            onClose={handleClose}\r\n        >\r\n            <DialogTitle>\r\n                <Typography variant=\"h5\">{`${currentAction} Usuario`}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {errors?.length ?\r\n                    errors.map((error) => (\r\n                        <Alert variant=\"outlined\" severity=\"warning\" >\r\n                            {error}\r\n                        </Alert>\r\n                    )) : null}\r\n                <AddOrEditUserForm\r\n                    currentUser={currentUser}\r\n                    handleChange={handleInputChange}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    onClick={handleSubmission}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    {currentAction}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import {\r\n    Avatar,\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    IconButton,\r\n    makeStyles,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\ntype UserCardProps = {\r\n    name?: string;\r\n    period?: string;\r\n    job?: string;\r\n};\r\n\r\nexport const UserCard = ({\r\n    name = \"test\",\r\n    job = \"Regidor SPM\",\r\n    period = \"2020-2024\",\r\n}: UserCardProps) => {\r\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n    const anchorEl = useRef(null);\r\n\r\n    const handleMenuOpen = () => {\r\n        setIsOpenMenu(!isOpenMenu);\r\n    };\r\n\r\n    const userCardStyles = makeStyles((theme) => ({\r\n        avatarIcon: {\r\n            width: \"30px\",\r\n            height: \"30px\",\r\n            color: theme.palette.grey[100],\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n    }));\r\n\r\n    const classes = userCardStyles();\r\n\r\n    return (\r\n        <Grid xs={12} sm={3} item>\r\n            <Card variant=\"elevation\">\r\n                <Menu\r\n                    open={isOpenMenu}\r\n                    anchorEl={anchorEl.current}\r\n                    onClose={handleMenuOpen}\r\n                >\r\n                    <MenuItem>Editar</MenuItem>\r\n                    <MenuItem color=\"secondary\">Eliminar</MenuItem>\r\n                </Menu>\r\n                <CardHeader\r\n                    action={\r\n                        <>\r\n                            <IconButton ref={anchorEl} onClick={handleMenuOpen}>\r\n                                <MoreVert />\r\n                            </IconButton>\r\n                        </>\r\n                    }\r\n                    avatar={\r\n                        <Avatar className={classes.avatarIcon}>\r\n                            {name.toUpperCase()[0]}\r\n                        </Avatar>\r\n                    }\r\n                ></CardHeader>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Typography variant=\"h4\">{name}</Typography>\r\n                        <Typography variant=\"caption\">{`${job} | ${period}`}</Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n","import { Container, Grid } from \"@material-ui/core\";\r\nimport { useState, useEffect } from 'react';\r\nimport { RightActionButton } from \"../../components/RightActionButton\";\r\nimport { AddOrEditUserModal } from \"./components/usersPage/AddOrEditUserModal\";\r\nimport { UserCard } from \"./components/usersPage/UserCard\";\r\nimport { useFirebaseUsers } from '../../firebase/hooks/useFirebaseUsers';\r\nimport { userInitialState } from './helpers/userInitialState';\r\n\r\nexport const Users = () => {\r\n    const {createUser, getUsers} = useFirebaseUsers();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [users, setUsers] = useState<typeof userInitialState[]>([]);\r\n\r\n    const handleModalClose = () => {\r\n        setShowModal(!showModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(!users.length){\r\n            getUsers().then((values) => {\r\n                setUsers(values);\r\n            })\r\n        }\r\n    }, [getUsers, users.length])\r\n\r\n    return (\r\n        <Container>\r\n            <RightActionButton\r\n                buttonText=\"Nuevo Usuario\"\r\n                onClick={handleModalClose}\r\n            />\r\n            <Grid container spacing={2}>\r\n                {users.map((user) => (\r\n                    <UserCard\r\n                        name={`${user.firstName} ${user.lastName}`}\r\n                        job={user.job}\r\n                        period={user.period.toString()}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            <AddOrEditUserModal\r\n                show={showModal}\r\n                handleClose={handleModalClose}\r\n                submissionCallback = {createUser}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Room } from \"../pages/admin/Room\";\r\nimport { Rooms } from \"../pages/admin/Rooms\";\r\nimport { Settings } from \"../pages/admin/Settings\";\r\nimport { Users } from \"../pages/admin/Users\";\r\n\r\nexport const AdminRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/ajustes\" component={Settings} />\r\n            <Route exact path=\"/usuarios\" component={Users} />\r\n            <Route exact path=\"/sala/:id\" component={Room} />\r\n            <Route path=\"/\" component={Rooms} />\r\n        </Switch>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { MainListItems } from \"../../firebase/components/listItems\";\r\nimport { DashboardStyles } from \"./helpers/styles/DashboardStyles\";\r\nimport { HowToVote } from \"@material-ui/icons\";\r\nimport { AdminRoutes } from \"../../routes/AdminRoutes\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function BasePage() {\r\n    const classes = DashboardStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        localStorage.setItem(\"dashBoardOpen\", JSON.stringify(\"true\"));\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        localStorage.setItem(\"dashBoardOpen\", JSON.stringify(\"false\"));\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(JSON.parse(localStorage.getItem(\"dashBoardOpen\") ?? \"false\"));\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"absolute\"\r\n                className={clsx(classes.appBar, open && classes.appBarShift)}\r\n            >\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.menuButtonHidden\r\n                        )}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        color=\"inherit\"\r\n                        noWrap\r\n                        className={classes.title}\r\n                    >\r\n                        <HowToVote /> Suffragium\r\n                    </Typography>\r\n                    <IconButton color=\"inherit\"></IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(\r\n                        classes.drawerPaper,\r\n                        !open && classes.drawerPaperClose\r\n                    ),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <MainListItems />\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <AdminRoutes />\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import { Switch } from \"react-router\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { useAppTheme } from \"../pages/auth/hooks/useAppTheme\";\r\nimport { LoginPage } from \"../pages/auth/LoginPage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { rootState } from \"../redux\";\r\nimport BasePage from '../pages/admin/BasePage';\r\nimport { useEffect } from 'react';\r\nimport { useFirebaseUsers } from '../firebase/hooks/useFirebaseUsers';\r\n\r\nexport const AppRouter = () => {\r\n    const {checkIfToken} = useFirebaseUsers();\r\n    const user = useSelector<rootState>(\r\n        (state) => state.app.user.uid\r\n    );\r\n\r\n    const theme = useAppTheme();\r\n    const isAuth = !!user;\r\n\r\n    useEffect(() => {\r\n        checkIfToken()\r\n    }, [checkIfToken])\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Switch>\r\n                <PublicRoute\r\n                    rest={{}}\r\n                    isAuthenticated={isAuth}\r\n                    Component={LoginPage}\r\n                    exact\r\n                    path=\"/auth\"\r\n                />\r\n                <PrivateRoute\r\n                    rest={{}}\r\n                    isAuthenticated={isAuth}\r\n                    Component={BasePage}\r\n                    path=\"/\"\r\n                />\r\n            </Switch>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n","import { createTheme } from '@material-ui/core';\r\nimport { PaletteType } from '@material-ui/core';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useMemo, useEffect, useCallback } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { appDispatch, rootState } from '../../../redux/index';\r\nexport const useAppTheme = () => {\r\n    const dispatch = useDispatch<appDispatch>();\r\n    const prefersDarkTheme = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n    const reduxTheme = useSelector<rootState>(\r\n        (state) => state.app.theme,\r\n        shallowEqual\r\n    ) as PaletteType;\r\n\r\n    const getTheme = useCallback(() => {\r\n        const choosedTheme = localStorage.getItem(\"theme\");\r\n        if (choosedTheme) {\r\n            return choosedTheme;\r\n        } else {\r\n            const desiredTheme = prefersDarkTheme ? \"dark\" : \"light\";\r\n            localStorage.setItem(\"theme\", desiredTheme);\r\n            dispatch({ type: \"SET_THEME\", payload: desiredTheme });\r\n            return desiredTheme;\r\n        }\r\n    }, [dispatch, prefersDarkTheme]);\r\n\r\n    const theme = useMemo(\r\n        () =>\r\n            createTheme({\r\n                palette: {\r\n                    type: reduxTheme,\r\n                },\r\n            }),\r\n        [reduxTheme]\r\n    );\r\n\r\n    useEffect(() => {\r\n        getTheme();\r\n    }, [getTheme]);\r\n\r\n    return theme;\r\n}","// import { LoginPage } from './pages/auth/LoginPage';\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport { FirebaseProvider } from \"./firebase/components/FirebaseProvider\";\nimport { store } from \"./redux/store\";\nimport { AppRouter } from \"./routes/AppRouter\";\nfunction App() {\n    return (\n        <FirebaseProvider>\n            <Provider store={store}>\n                <BrowserRouter>\n                    <AppRouter />\n                </BrowserRouter>\n            </Provider>\n        </FirebaseProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}